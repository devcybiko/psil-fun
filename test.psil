3 a <-
5 b <-
a$ b$ +  
8 == !!

`this is a
test` .print

`a` $
( + ) sum <-
5 6 sum$$ .peek
11 == !!

0 ( 1 2 3 4 ) sum$ .reduce .peek
10 == !!

( 1 2 3 4 ) .car .peek
1 == !!

( 1 2 3 4 ) .cdr .peek 
.spread 
4 == !!
3 == !!
2 == !!

( 1 2 3 4 ) save <-

save$ .car
1 == !!

save$ .cdr
.spread 
4 == !!
3 == !!
2 == !!

save$ 2 .head .peek
.spread
2 == !!
1 == !!
 
save$ 2 .tail .peek
.spread
4 == !!
3 == !!
 
`a` `b` .swap
`a` == !!
`b` == !!


( 1 2 ( `x` `y` ) 3 4 ) 2 .get .cdr .peek
.spread
`y` == !! 

( 1 2 3 4 5 6 ) .spread 5 .nlist .swap .pop
( 2 3 4 5 6 ) == !!

1 2 + 3 == !!
2 3 - 0 1 - == !!
4 5 * 20 == !!
6 7 / .int 0 == !!
10 3 / .int 3 == !!
10 3 // 3 == !!
10 3 % 1 == !!

( 1 2 3 4 5 ) ( .dup * ) .map 0 .swap ( + ) .reduce
55 == !!

30 foo <-
45 bar <-
foo--
bar++
foo$ 29 == !!
bar$ 46 == !!

45 foo <-
( foo$ print foo -- foo$ 0 >= ) .while
foo$ 0 1 - == !!

( 1 2 3 4 5) ( 2 * ) .each
5 .nlist (2 4 6 8 10)  == !!

`foo` xxx <-
xxx$$ 0 1 - == !!

( (a A) (b B) (c C) ) upper <-

upper$ b @ .dup .print B == !!

upper$ `upper.psil` .export
`upper.psil` .import

upper 2 @ p == !!

`this is a test` `test.jnk` .write
`test.jnk` .read `this is a test` == !!